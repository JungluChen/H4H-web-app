{"ast":null,"code":"import React from'react';import{useNavigate}from'react-router-dom';import{useTaskStore}from'../store/taskStore';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskDetails=_ref=>{let{task,onClose}=_ref;const navigate=useNavigate();const addChat=useTaskStore(state=>state.addChat);const handleContactClick=()=>{const chats=useTaskStore.getState().chats;// Check if a chat for this task already exists\nconst existingChat=chats.find(chat=>chat.sender===task.postedBy&&chat.taskTitle===task.title);if(existingChat){// If chat exists, just navigate to it\nonClose();navigate('/chat',{state:{initialChat:existingChat}});return;}// If no existing chat, create a new one\nconst newChat={id:\"chat-\".concat(Date.now()),sender:task.postedBy,taskTitle:task.title,message:\"Hi, I'm interested in helping with \\\"\".concat(task.title,\"\\\"\"),timestamp:new Date().toLocaleTimeString(),unreadCount:1};// Add the chat to the store\naddChat(newChat);// Close the task details modal\nonClose();// Navigate to chat room and initialize the chat immediately\nnavigate('/chat',{state:{initialChat:newChat}});};return/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(0,0,0,0.8)',display:'flex',justifyContent:'center',alignItems:'center',zIndex:1000,padding:'20px'},children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#222',borderRadius:'10px',padding:'20px',width:'100%',maxWidth:'400px',maxHeight:'80vh',overflowY:'auto',position:'relative'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:onClose,style:{position:'absolute',right:'10px',top:'10px',fontSize:'20px',background:'none',border:'none',color:'white',cursor:'pointer'},children:\"\\u2715\"}),/*#__PURE__*/_jsx(\"h2\",{style:{marginTop:'0',color:'white'},children:task.title}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{color:'#FFD700',fontSize:'24px',marginBottom:'10px'},children:[\"\\uD83D\\uDCB0 $\",task.price]}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'#999',marginBottom:'5px'},children:[\"\\uD83D\\uDCC2 Category: \",task.category]}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'#999',marginBottom:'5px'},children:[\"\\u23F0 Time: \",task.time]}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'#999',marginBottom:'5px'},children:[\"\\uD83D\\uDCCD Location: \",task.location]}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'#999',marginBottom:'5px'},children:[\"\\uD83D\\uDC64 Posted by: \",task.postedBy]}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'#999',marginBottom:'5px'},children:[\"\\uD83C\\uDF10 Language: \",task.language,\" \",task.flag==='us'?'üá∫üá∏':task.flag==='jp'?'üáØüáµ':'üåê']})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'white',marginBottom:'10px'},children:\"Description\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:'#999'},children:task.description||'No description provided.'})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleContactClick,style:{width:'100%',padding:'15px',backgroundColor:'#007AFF',border:'none',borderRadius:'5px',color:'white',fontSize:'16px',cursor:'pointer'},children:\"Contact Task Poster \\uD83D\\uDCAC\"})]})});};export default TaskDetails;","map":{"version":3,"names":["React","useNavigate","useTaskStore","jsx","_jsx","jsxs","_jsxs","TaskDetails","_ref","task","onClose","navigate","addChat","state","handleContactClick","chats","getState","existingChat","find","chat","sender","postedBy","taskTitle","title","initialChat","newChat","id","concat","Date","now","message","timestamp","toLocaleTimeString","unreadCount","style","position","top","left","right","bottom","backgroundColor","display","justifyContent","alignItems","zIndex","padding","children","borderRadius","width","maxWidth","maxHeight","overflowY","onClick","fontSize","background","border","color","cursor","marginTop","marginBottom","price","category","time","location","language","flag","description"],"sources":["C:/Users/justi/OneDrive/Desktop/EN/src/components/TaskDetails.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Task } from '../types';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useTaskStore } from '../store/taskStore';\r\n\r\ninterface TaskDetailsProps {\r\n  task: Task;\r\n  onClose: () => void;\r\n}\r\n\r\nconst TaskDetails = ({ task, onClose }: TaskDetailsProps) => {\r\n  const navigate = useNavigate();\r\n  const addChat = useTaskStore(state => state.addChat);\r\n\r\n  const handleContactClick = () => {\r\n    const chats = useTaskStore.getState().chats;\r\n    \r\n    // Check if a chat for this task already exists\r\n    const existingChat = chats.find(chat => \r\n      chat.sender === task.postedBy && \r\n      chat.taskTitle === task.title\r\n    );\r\n\r\n    if (existingChat) {\r\n      // If chat exists, just navigate to it\r\n      onClose();\r\n      navigate('/chat', { state: { initialChat: existingChat } });\r\n      return;\r\n    }\r\n\r\n    // If no existing chat, create a new one\r\n    const newChat = {\r\n      id: `chat-${Date.now()}`,\r\n      sender: task.postedBy,\r\n      taskTitle: task.title,\r\n      message: `Hi, I'm interested in helping with \"${task.title}\"`,\r\n      timestamp: new Date().toLocaleTimeString(),\r\n      unreadCount: 1\r\n    };\r\n\r\n    // Add the chat to the store\r\n    addChat(newChat);\r\n\r\n    // Close the task details modal\r\n    onClose();\r\n\r\n    // Navigate to chat room and initialize the chat immediately\r\n    navigate('/chat', { state: { initialChat: newChat } });\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: 'rgba(0,0,0,0.8)',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      zIndex: 1000,\r\n      padding: '20px'\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: '#222',\r\n        borderRadius: '10px',\r\n        padding: '20px',\r\n        width: '100%',\r\n        maxWidth: '400px',\r\n        maxHeight: '80vh',\r\n        overflowY: 'auto',\r\n        position: 'relative'\r\n      }}>\r\n        <button\r\n          onClick={onClose}\r\n          style={{\r\n            position: 'absolute',\r\n            right: '10px',\r\n            top: '10px',\r\n            fontSize: '20px',\r\n            background: 'none',\r\n            border: 'none',\r\n            color: 'white',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          ‚úï\r\n        </button>\r\n\r\n        <h2 style={{ marginTop: '0', color: 'white' }}>{task.title}</h2>\r\n        \r\n        <div style={{ marginBottom: '20px' }}>\r\n          <div style={{ color: '#FFD700', fontSize: '24px', marginBottom: '10px' }}>\r\n            üí∞ ${task.price}\r\n          </div>\r\n          <div style={{ color: '#999', marginBottom: '5px' }}>\r\n            üìÇ Category: {task.category}\r\n          </div>\r\n          <div style={{ color: '#999', marginBottom: '5px' }}>\r\n            ‚è∞ Time: {task.time}\r\n          </div>\r\n          <div style={{ color: '#999', marginBottom: '5px' }}>\r\n            üìç Location: {task.location}\r\n          </div>\r\n          <div style={{ color: '#999', marginBottom: '5px' }}>\r\n            üë§ Posted by: {task.postedBy}\r\n          </div>\r\n          <div style={{ color: '#999', marginBottom: '5px' }}>\r\n            üåê Language: {task.language} {task.flag === 'us' ? 'üá∫üá∏' : task.flag === 'jp' ? 'üáØüáµ' : 'üåê'}\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ marginBottom: '20px' }}>\r\n          <h3 style={{ color: 'white', marginBottom: '10px' }}>Description</h3>\r\n          <p style={{ color: '#999' }}>{task.description || 'No description provided.'}</p>\r\n        </div>\r\n\r\n        <button\r\n          onClick={handleContactClick}\r\n          style={{\r\n            width: '100%',\r\n            padding: '15px',\r\n            backgroundColor: '#007AFF',\r\n            border: 'none',\r\n            borderRadius: '5px',\r\n            color: 'white',\r\n            fontSize: '16px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          Contact Task Poster üí¨\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDetails; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,YAAY,KAAQ,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAOlD,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAyC,IAAxC,CAAEC,IAAI,CAAEC,OAA0B,CAAC,CAAAF,IAAA,CACtD,KAAM,CAAAG,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAW,OAAO,CAAGV,YAAY,CAACW,KAAK,EAAIA,KAAK,CAACD,OAAO,CAAC,CAEpD,KAAM,CAAAE,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,KAAK,CAAGb,YAAY,CAACc,QAAQ,CAAC,CAAC,CAACD,KAAK,CAE3C;AACA,KAAM,CAAAE,YAAY,CAAGF,KAAK,CAACG,IAAI,CAACC,IAAI,EAClCA,IAAI,CAACC,MAAM,GAAKX,IAAI,CAACY,QAAQ,EAC7BF,IAAI,CAACG,SAAS,GAAKb,IAAI,CAACc,KAC1B,CAAC,CAED,GAAIN,YAAY,CAAE,CAChB;AACAP,OAAO,CAAC,CAAC,CACTC,QAAQ,CAAC,OAAO,CAAE,CAAEE,KAAK,CAAE,CAAEW,WAAW,CAAEP,YAAa,CAAE,CAAC,CAAC,CAC3D,OACF,CAEA;AACA,KAAM,CAAAQ,OAAO,CAAG,CACdC,EAAE,SAAAC,MAAA,CAAUC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAE,CACxBT,MAAM,CAAEX,IAAI,CAACY,QAAQ,CACrBC,SAAS,CAAEb,IAAI,CAACc,KAAK,CACrBO,OAAO,yCAAAH,MAAA,CAAyClB,IAAI,CAACc,KAAK,MAAG,CAC7DQ,SAAS,CAAE,GAAI,CAAAH,IAAI,CAAC,CAAC,CAACI,kBAAkB,CAAC,CAAC,CAC1CC,WAAW,CAAE,CACf,CAAC,CAED;AACArB,OAAO,CAACa,OAAO,CAAC,CAEhB;AACAf,OAAO,CAAC,CAAC,CAET;AACAC,QAAQ,CAAC,OAAO,CAAE,CAAEE,KAAK,CAAE,CAAEW,WAAW,CAAEC,OAAQ,CAAE,CAAC,CAAC,CACxD,CAAC,CAED,mBACErB,IAAA,QAAK8B,KAAK,CAAE,CACVC,QAAQ,CAAE,OAAO,CACjBC,GAAG,CAAE,CAAC,CACNC,IAAI,CAAE,CAAC,CACPC,KAAK,CAAE,CAAC,CACRC,MAAM,CAAE,CAAC,CACTC,eAAe,CAAE,iBAAiB,CAClCC,OAAO,CAAE,MAAM,CACfC,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QAAQ,CACpBC,MAAM,CAAE,IAAI,CACZC,OAAO,CAAE,MACX,CAAE,CAAAC,QAAA,cACAxC,KAAA,QAAK4B,KAAK,CAAE,CACVM,eAAe,CAAE,MAAM,CACvBO,YAAY,CAAE,MAAM,CACpBF,OAAO,CAAE,MAAM,CACfG,KAAK,CAAE,MAAM,CACbC,QAAQ,CAAE,OAAO,CACjBC,SAAS,CAAE,MAAM,CACjBC,SAAS,CAAE,MAAM,CACjBhB,QAAQ,CAAE,UACZ,CAAE,CAAAW,QAAA,eACA1C,IAAA,WACEgD,OAAO,CAAE1C,OAAQ,CACjBwB,KAAK,CAAE,CACLC,QAAQ,CAAE,UAAU,CACpBG,KAAK,CAAE,MAAM,CACbF,GAAG,CAAE,MAAM,CACXiB,QAAQ,CAAE,MAAM,CAChBC,UAAU,CAAE,MAAM,CAClBC,MAAM,CAAE,MAAM,CACdC,KAAK,CAAE,OAAO,CACdC,MAAM,CAAE,SACV,CAAE,CAAAX,QAAA,CACH,QAED,CAAQ,CAAC,cAET1C,IAAA,OAAI8B,KAAK,CAAE,CAAEwB,SAAS,CAAE,GAAG,CAAEF,KAAK,CAAE,OAAQ,CAAE,CAAAV,QAAA,CAAErC,IAAI,CAACc,KAAK,CAAK,CAAC,cAEhEjB,KAAA,QAAK4B,KAAK,CAAE,CAAEyB,YAAY,CAAE,MAAO,CAAE,CAAAb,QAAA,eACnCxC,KAAA,QAAK4B,KAAK,CAAE,CAAEsB,KAAK,CAAE,SAAS,CAAEH,QAAQ,CAAE,MAAM,CAAEM,YAAY,CAAE,MAAO,CAAE,CAAAb,QAAA,EAAC,gBACpE,CAACrC,IAAI,CAACmD,KAAK,EACZ,CAAC,cACNtD,KAAA,QAAK4B,KAAK,CAAE,CAAEsB,KAAK,CAAE,MAAM,CAAEG,YAAY,CAAE,KAAM,CAAE,CAAAb,QAAA,EAAC,yBACrC,CAACrC,IAAI,CAACoD,QAAQ,EACxB,CAAC,cACNvD,KAAA,QAAK4B,KAAK,CAAE,CAAEsB,KAAK,CAAE,MAAM,CAAEG,YAAY,CAAE,KAAM,CAAE,CAAAb,QAAA,EAAC,eAC1C,CAACrC,IAAI,CAACqD,IAAI,EACf,CAAC,cACNxD,KAAA,QAAK4B,KAAK,CAAE,CAAEsB,KAAK,CAAE,MAAM,CAAEG,YAAY,CAAE,KAAM,CAAE,CAAAb,QAAA,EAAC,yBACrC,CAACrC,IAAI,CAACsD,QAAQ,EACxB,CAAC,cACNzD,KAAA,QAAK4B,KAAK,CAAE,CAAEsB,KAAK,CAAE,MAAM,CAAEG,YAAY,CAAE,KAAM,CAAE,CAAAb,QAAA,EAAC,0BACpC,CAACrC,IAAI,CAACY,QAAQ,EACzB,CAAC,cACNf,KAAA,QAAK4B,KAAK,CAAE,CAAEsB,KAAK,CAAE,MAAM,CAAEG,YAAY,CAAE,KAAM,CAAE,CAAAb,QAAA,EAAC,yBACrC,CAACrC,IAAI,CAACuD,QAAQ,CAAC,GAAC,CAACvD,IAAI,CAACwD,IAAI,GAAK,IAAI,CAAG,MAAM,CAAGxD,IAAI,CAACwD,IAAI,GAAK,IAAI,CAAG,MAAM,CAAG,IAAI,EAC3F,CAAC,EACH,CAAC,cAEN3D,KAAA,QAAK4B,KAAK,CAAE,CAAEyB,YAAY,CAAE,MAAO,CAAE,CAAAb,QAAA,eACnC1C,IAAA,OAAI8B,KAAK,CAAE,CAAEsB,KAAK,CAAE,OAAO,CAAEG,YAAY,CAAE,MAAO,CAAE,CAAAb,QAAA,CAAC,aAAW,CAAI,CAAC,cACrE1C,IAAA,MAAG8B,KAAK,CAAE,CAAEsB,KAAK,CAAE,MAAO,CAAE,CAAAV,QAAA,CAAErC,IAAI,CAACyD,WAAW,EAAI,0BAA0B,CAAI,CAAC,EAC9E,CAAC,cAEN9D,IAAA,WACEgD,OAAO,CAAEtC,kBAAmB,CAC5BoB,KAAK,CAAE,CACLc,KAAK,CAAE,MAAM,CACbH,OAAO,CAAE,MAAM,CACfL,eAAe,CAAE,SAAS,CAC1Be,MAAM,CAAE,MAAM,CACdR,YAAY,CAAE,KAAK,CACnBS,KAAK,CAAE,OAAO,CACdH,QAAQ,CAAE,MAAM,CAChBI,MAAM,CAAE,SACV,CAAE,CAAAX,QAAA,CACH,kCAED,CAAQ,CAAC,EACN,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAvC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}