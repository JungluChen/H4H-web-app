{"ast":null,"code":"import { create } from 'zustand';\nimport { dummyTasks, dummyChats, dummyMessages } from '../data/dummyData';\n// Add dummy profile data\nconst dummyProfile = {\n  name: \"John Doe\",\n  wallet: 6000,\n  achievements: [{\n    id: \"1\",\n    title: \"First Task Complete\",\n    description: \"Completed your first task\",\n    progress: 100,\n    reward: 50,\n    icon: \"üéØ\"\n  }, {\n    id: \"2\",\n    title: \"Super Helper\",\n    description: \"Helped 10 people\",\n    progress: 80,\n    reward: 100,\n    icon: \"‚≠ê\"\n  }, {\n    id: \"3\",\n    title: \"Quick Responder\",\n    description: \"Responded to 5 tasks within an hour\",\n    progress: 60,\n    reward: 75,\n    icon: \"‚ö°\"\n  }],\n  taskHistory: dummyTasks.slice(0, 3),\n  rating: 4.8\n};\nexport const useTaskStore = create(set => ({\n  tasks: dummyTasks,\n  chats: dummyChats,\n  readMessages: [],\n  profile: dummyProfile,\n  chatMessages: dummyMessages,\n  addTask: newTask => set(state => ({\n    tasks: [{\n      ...newTask,\n      id: String(state.tasks.length + 1),\n      status: 'open'\n    }, ...state.tasks]\n  })),\n  addChat: newChat => set(state => {\n    const existingChat = state.chats.find(chat => chat.sender === newChat.sender && chat.taskTitle === newChat.taskTitle);\n    if (existingChat) {\n      return state;\n    }\n    return {\n      chats: [newChat, ...state.chats]\n    };\n  }),\n  markChatAsRead: chatId => set(state => ({\n    readMessages: [...state.readMessages, chatId],\n    chats: state.chats.map(chat => chat.id === chatId ? {\n      ...chat,\n      unreadCount: 0\n    } : chat)\n  })),\n  addMessage: (chatId, message) => set(state => ({\n    chatMessages: {\n      ...state.chatMessages,\n      [chatId]: [...(state.chatMessages[chatId] || []), message]\n    }\n  }))\n}));","map":{"version":3,"names":["create","dummyTasks","dummyChats","dummyMessages","dummyProfile","name","wallet","achievements","id","title","description","progress","reward","icon","taskHistory","slice","rating","useTaskStore","set","tasks","chats","readMessages","profile","chatMessages","addTask","newTask","state","String","length","status","addChat","newChat","existingChat","find","chat","sender","taskTitle","markChatAsRead","chatId","map","unreadCount","addMessage","message"],"sources":["C:/Users/5x/Downloads/EN/src/store/taskStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { dummyTasks, dummyChats, dummyMessages } from '../data/dummyData';\r\nimport { Task, Chat } from '../types';\r\n\r\ninterface Achievement {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  progress: number;\r\n  reward: number;\r\n  icon: string;\r\n}\r\n\r\ninterface Profile {\r\n  name: string;\r\n  wallet: number;\r\n  achievements: Achievement[];\r\n  taskHistory: Task[];\r\n  rating: number;\r\n}\r\n\r\ninterface TaskState {\r\n  tasks: Task[];\r\n  chats: Chat[];\r\n  readMessages: string[];\r\n  profile: Profile;\r\n  chatMessages: Record<string, Chat[]>;\r\n  addTask: (task: Omit<Task, 'id'>) => void;\r\n  addChat: (chat: Chat) => void;\r\n  markChatAsRead: (chatId: string) => void;\r\n  addMessage: (chatId: string, message: Chat) => void;\r\n}\r\n\r\n// Add dummy profile data\r\nconst dummyProfile: Profile = {\r\n  name: \"John Doe\",\r\n  wallet: 6000,\r\n  achievements: [\r\n    {\r\n      id: \"1\",\r\n      title: \"First Task Complete\",\r\n      description: \"Completed your first task\",\r\n      progress: 100,\r\n      reward: 50,\r\n      icon: \"üéØ\"\r\n    },\r\n    {\r\n      id: \"2\",\r\n      title: \"Super Helper\",\r\n      description: \"Helped 10 people\",\r\n      progress: 80,\r\n      reward: 100,\r\n      icon: \"‚≠ê\"\r\n    },\r\n    {\r\n      id: \"3\",\r\n      title: \"Quick Responder\",\r\n      description: \"Responded to 5 tasks within an hour\",\r\n      progress: 60,\r\n      reward: 75,\r\n      icon: \"‚ö°\"\r\n    }\r\n  ],\r\n  taskHistory: dummyTasks.slice(0, 3),\r\n  rating: 4.8\r\n};\r\n\r\nexport const useTaskStore = create<TaskState>((set) => ({\r\n  tasks: dummyTasks,\r\n  chats: dummyChats,\r\n  readMessages: [],\r\n  profile: dummyProfile,\r\n  chatMessages: dummyMessages,\r\n  addTask: (newTask) => set((state) => ({\r\n    tasks: [\r\n      {\r\n        ...newTask,\r\n        id: String(state.tasks.length + 1),\r\n        status: 'open'\r\n      },\r\n      ...state.tasks\r\n    ]\r\n  })),\r\n  addChat: (newChat) => set((state) => {\r\n    const existingChat = state.chats.find(chat => \r\n      chat.sender === newChat.sender && \r\n      chat.taskTitle === newChat.taskTitle\r\n    );\r\n    if (existingChat) {\r\n      return state;\r\n    }\r\n    return {\r\n      chats: [newChat, ...state.chats]\r\n    };\r\n  }),\r\n  markChatAsRead: (chatId: string) => set((state) => ({\r\n    readMessages: [...state.readMessages, chatId],\r\n    chats: state.chats.map(chat => \r\n      chat.id === chatId \r\n        ? { ...chat, unreadCount: 0 }\r\n        : chat\r\n    )\r\n  })),\r\n  addMessage: (chatId: string, message: Chat) => set((state) => ({\r\n    chatMessages: {\r\n      ...state.chatMessages,\r\n      [chatId]: [...(state.chatMessages[chatId] || []), message]\r\n    }\r\n  }))\r\n})); "],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,SAASC,UAAU,EAAEC,UAAU,EAAEC,aAAa,QAAQ,mBAAmB;AAgCzE;AACA,MAAMC,YAAqB,GAAG;EAC5BC,IAAI,EAAE,UAAU;EAChBC,MAAM,EAAE,IAAI;EACZC,YAAY,EAAE,CACZ;IACEC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,qBAAqB;IAC5BC,WAAW,EAAE,2BAA2B;IACxCC,QAAQ,EAAE,GAAG;IACbC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE;EACR,CAAC,EACD;IACEL,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,cAAc;IACrBC,WAAW,EAAE,kBAAkB;IAC/BC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,GAAG;IACXC,IAAI,EAAE;EACR,CAAC,EACD;IACEL,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,iBAAiB;IACxBC,WAAW,EAAE,qCAAqC;IAClDC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE;EACR,CAAC,CACF;EACDC,WAAW,EAAEb,UAAU,CAACc,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACnCC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGjB,MAAM,CAAakB,GAAG,KAAM;EACtDC,KAAK,EAAElB,UAAU;EACjBmB,KAAK,EAAElB,UAAU;EACjBmB,YAAY,EAAE,EAAE;EAChBC,OAAO,EAAElB,YAAY;EACrBmB,YAAY,EAAEpB,aAAa;EAC3BqB,OAAO,EAAGC,OAAO,IAAKP,GAAG,CAAEQ,KAAK,KAAM;IACpCP,KAAK,EAAE,CACL;MACE,GAAGM,OAAO;MACVjB,EAAE,EAAEmB,MAAM,CAACD,KAAK,CAACP,KAAK,CAACS,MAAM,GAAG,CAAC,CAAC;MAClCC,MAAM,EAAE;IACV,CAAC,EACD,GAAGH,KAAK,CAACP,KAAK;EAElB,CAAC,CAAC,CAAC;EACHW,OAAO,EAAGC,OAAO,IAAKb,GAAG,CAAEQ,KAAK,IAAK;IACnC,MAAMM,YAAY,GAAGN,KAAK,CAACN,KAAK,CAACa,IAAI,CAACC,IAAI,IACxCA,IAAI,CAACC,MAAM,KAAKJ,OAAO,CAACI,MAAM,IAC9BD,IAAI,CAACE,SAAS,KAAKL,OAAO,CAACK,SAC7B,CAAC;IACD,IAAIJ,YAAY,EAAE;MAChB,OAAON,KAAK;IACd;IACA,OAAO;MACLN,KAAK,EAAE,CAACW,OAAO,EAAE,GAAGL,KAAK,CAACN,KAAK;IACjC,CAAC;EACH,CAAC,CAAC;EACFiB,cAAc,EAAGC,MAAc,IAAKpB,GAAG,CAAEQ,KAAK,KAAM;IAClDL,YAAY,EAAE,CAAC,GAAGK,KAAK,CAACL,YAAY,EAAEiB,MAAM,CAAC;IAC7ClB,KAAK,EAAEM,KAAK,CAACN,KAAK,CAACmB,GAAG,CAACL,IAAI,IACzBA,IAAI,CAAC1B,EAAE,KAAK8B,MAAM,GACd;MAAE,GAAGJ,IAAI;MAAEM,WAAW,EAAE;IAAE,CAAC,GAC3BN,IACN;EACF,CAAC,CAAC,CAAC;EACHO,UAAU,EAAEA,CAACH,MAAc,EAAEI,OAAa,KAAKxB,GAAG,CAAEQ,KAAK,KAAM;IAC7DH,YAAY,EAAE;MACZ,GAAGG,KAAK,CAACH,YAAY;MACrB,CAACe,MAAM,GAAG,CAAC,IAAIZ,KAAK,CAACH,YAAY,CAACe,MAAM,CAAC,IAAI,EAAE,CAAC,EAAEI,OAAO;IAC3D;EACF,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}