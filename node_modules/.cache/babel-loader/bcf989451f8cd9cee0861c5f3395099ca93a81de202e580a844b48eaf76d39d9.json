{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{useTaskStore}from'../store/taskStore';import DemoDisclaimer from'../components/DemoDisclaimer';import BottomNavigation from'../components/BottomNavigation';import{useLocation}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatRoom=()=>{const location=useLocation();const chats=useTaskStore(state=>state.chats);const readMessages=useTaskStore(state=>state.readMessages);const markChatAsRead=useTaskStore(state=>state.markChatAsRead);const[selectedChat,setSelectedChat]=useState(null);const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');const messagesEndRef=useRef(null);// Auto scroll to bottom when new messages arrive\nconst scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};useEffect(()=>{scrollToBottom();},[messages]);// Handle initial chat from navigation\nuseEffect(()=>{const state=location.state;if(state!==null&&state!==void 0&&state.initialChat){initializeChat(state.initialChat);}},[location]);const initializeChat=chat=>{setSelectedChat(chat);setMessages([{id:'1',text:chat.message,sender:chat.sender,timestamp:chat.timestamp}]);if(!readMessages.includes(chat.id)){markChatAsRead(chat.id);}};const handleSendMessage=e=>{e.preventDefault();if(!newMessage.trim()||!selectedChat)return;const message={id:Date.now().toString(),text:newMessage,sender:'You',timestamp:new Date().toLocaleTimeString()};setMessages([...messages,message]);setNewMessage('');};return/*#__PURE__*/_jsxs(\"div\",{style:{position:'relative',height:'100vh',maxWidth:'430px',margin:'0 auto',backgroundColor:'#111'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',paddingBottom:'80px',// Add padding for BottomNavigation\nheight:'100%',overflowY:'auto'},children:[/*#__PURE__*/_jsx(DemoDisclaimer,{}),selectedChat?/*#__PURE__*/// Chat View\n_jsxs(\"div\",{style:{flex:1,display:'flex',flexDirection:'column',backgroundColor:'#111',margin:'-20px',marginBottom:'-80px',position:'relative',zIndex:1,height:'calc(100vh - 120px)'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{padding:'15px 20px',backgroundColor:'#222',display:'flex',alignItems:'center',borderBottom:'1px solid #333'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedChat(null),style:{background:'none',border:'none',color:'white',fontSize:'20px',marginRight:'15px',cursor:'pointer'},children:\"\\u2190\"}),/*#__PURE__*/_jsx(\"h3\",{style:{margin:0,color:'white'},children:selectedChat.sender})]}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,overflowY:'auto',padding:'20px',display:'flex',flexDirection:'column',gap:'10px'},children:[messages.map(msg=>/*#__PURE__*/_jsxs(\"div\",{style:{alignSelf:msg.sender==='You'?'flex-end':'flex-start',maxWidth:'70%'},children:[/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:msg.sender==='You'?'#007AFF':'#333',padding:'10px 15px',borderRadius:'18px',color:'white'},children:msg.text}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'12px',color:'#666',marginTop:'5px',textAlign:msg.sender==='You'?'right':'left'},children:msg.timestamp})]},msg.id)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(\"div\",{style:{padding:'15px 20px',backgroundColor:'#222',borderTop:'1px solid #333',position:'sticky',bottom:0,zIndex:2},children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSendMessage,style:{display:'flex',gap:'10px'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newMessage,onChange:e=>setNewMessage(e.target.value),placeholder:\"Type a message...\",style:{flex:1,padding:'12px',borderRadius:'20px',border:'1px solid #333',backgroundColor:'#333',color:'white',fontSize:'16px'}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!newMessage.trim(),style:{padding:'12px 20px',backgroundColor:'#007AFF',border:'none',borderRadius:'20px',color:'white',cursor:newMessage.trim()?'pointer':'not-allowed',opacity:newMessage.trim()?1:0.5},children:\"Send\"})]})})]}):/*#__PURE__*/// Chat List View\n_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'20px'},children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search...\",style:{width:'100%',padding:'10px',borderRadius:'5px',border:'1px solid #333',backgroundColor:'#222',color:'white'}})}),chats.map(chat=>/*#__PURE__*/_jsxs(\"div\",{\"data-chat-id\":chat.id,onClick:()=>initializeChat(chat),style:{backgroundColor:'#222',borderRadius:'10px',padding:'15px',marginBottom:'15px',cursor:'pointer'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',marginBottom:'8px',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:0,color:'white',fontSize:'16px'},children:chat.sender}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#999',fontSize:'14px',flex:1,marginLeft:'12px',whiteSpace:'nowrap',overflow:'hidden',textOverflow:'ellipsis'},children:chat.taskTitle}),!readMessages.includes(chat.id)&&chat.unreadCount>0&&/*#__PURE__*/_jsx(\"span\",{style:{backgroundColor:'#007AFF',borderRadius:'50%',padding:'2px 8px',color:'white',fontSize:'14px',marginLeft:'8px'},children:chat.unreadCount})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"p\",{style:{margin:0,color:'#999',fontSize:'14px',flex:1,whiteSpace:'nowrap',overflow:'hidden',textOverflow:'ellipsis',paddingRight:'12px'},children:chat.message}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#666',fontSize:'12px',whiteSpace:'nowrap'},children:chat.timestamp})]})]},chat.id))]})]}),/*#__PURE__*/_jsx(BottomNavigation,{})]});};export default ChatRoom;","map":{"version":3,"names":["React","useState","useRef","useEffect","useTaskStore","DemoDisclaimer","BottomNavigation","useLocation","jsx","_jsx","jsxs","_jsxs","ChatRoom","location","chats","state","readMessages","markChatAsRead","selectedChat","setSelectedChat","messages","setMessages","newMessage","setNewMessage","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","initialChat","initializeChat","chat","id","text","message","sender","timestamp","includes","handleSendMessage","e","preventDefault","trim","Date","now","toString","toLocaleTimeString","style","position","height","maxWidth","margin","backgroundColor","children","padding","paddingBottom","overflowY","flex","display","flexDirection","marginBottom","zIndex","alignItems","borderBottom","onClick","background","border","color","fontSize","marginRight","cursor","gap","map","msg","alignSelf","borderRadius","marginTop","textAlign","ref","borderTop","bottom","onSubmit","type","value","onChange","target","placeholder","disabled","opacity","width","justifyContent","marginLeft","whiteSpace","overflow","textOverflow","taskTitle","unreadCount","paddingRight"],"sources":["C:/Users/justi/OneDrive/Desktop/EN/src/pages/ChatRoom.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { useTaskStore } from '../store/taskStore';\r\nimport DemoDisclaimer from '../components/DemoDisclaimer';\r\nimport BottomNavigation from '../components/BottomNavigation';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\ninterface ChatMessage {\r\n  id: string;\r\n  text: string;\r\n  sender: string;\r\n  timestamp: string;\r\n}\r\n\r\nconst ChatRoom = () => {\r\n  const location = useLocation();\r\n  const chats = useTaskStore(state => state.chats);\r\n  const readMessages = useTaskStore(state => state.readMessages);\r\n  const markChatAsRead = useTaskStore(state => state.markChatAsRead);\r\n  const [selectedChat, setSelectedChat] = useState<typeof chats[0] | null>(null);\r\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Auto scroll to bottom when new messages arrive\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Handle initial chat from navigation\r\n  useEffect(() => {\r\n    const state = location.state as { initialChat?: typeof chats[0] };\r\n    if (state?.initialChat) {\r\n      initializeChat(state.initialChat);\r\n    }\r\n  }, [location]);\r\n\r\n  const initializeChat = (chat: typeof chats[0]) => {\r\n    setSelectedChat(chat);\r\n    setMessages([\r\n      {\r\n        id: '1',\r\n        text: chat.message,\r\n        sender: chat.sender,\r\n        timestamp: chat.timestamp\r\n      }\r\n    ]);\r\n    if (!readMessages.includes(chat.id)) {\r\n      markChatAsRead(chat.id);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || !selectedChat) return;\r\n\r\n    const message: ChatMessage = {\r\n      id: Date.now().toString(),\r\n      text: newMessage,\r\n      sender: 'You',\r\n      timestamp: new Date().toLocaleTimeString()\r\n    };\r\n\r\n    setMessages([...messages, message]);\r\n    setNewMessage('');\r\n  };\r\n\r\n  return (\r\n    <div style={{ \r\n      position: 'relative',\r\n      height: '100vh',\r\n      maxWidth: '430px',\r\n      margin: '0 auto',\r\n      backgroundColor: '#111'\r\n    }}>\r\n      <div style={{ \r\n        padding: '20px',\r\n        paddingBottom: '80px', // Add padding for BottomNavigation\r\n        height: '100%',\r\n        overflowY: 'auto'\r\n      }}>\r\n        <DemoDisclaimer />\r\n        \r\n        {selectedChat ? (\r\n          // Chat View\r\n          <div style={{ \r\n            flex: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            backgroundColor: '#111',\r\n            margin: '-20px',\r\n            marginBottom: '-80px',\r\n            position: 'relative',\r\n            zIndex: 1,\r\n            height: 'calc(100vh - 120px)'\r\n          }}>\r\n            {/* Chat Header */}\r\n            <div style={{\r\n              padding: '15px 20px',\r\n              backgroundColor: '#222',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              borderBottom: '1px solid #333'\r\n            }}>\r\n              <button\r\n                onClick={() => setSelectedChat(null)}\r\n                style={{\r\n                  background: 'none',\r\n                  border: 'none',\r\n                  color: 'white',\r\n                  fontSize: '20px',\r\n                  marginRight: '15px',\r\n                  cursor: 'pointer'\r\n                }}\r\n              >\r\n                ←\r\n              </button>\r\n              <h3 style={{ margin: 0, color: 'white' }}>{selectedChat.sender}</h3>\r\n            </div>\r\n\r\n            {/* Messages Container */}\r\n            <div style={{\r\n              flex: 1,\r\n              overflowY: 'auto',\r\n              padding: '20px',\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              gap: '10px'\r\n            }}>\r\n              {messages.map((msg) => (\r\n                <div\r\n                  key={msg.id}\r\n                  style={{\r\n                    alignSelf: msg.sender === 'You' ? 'flex-end' : 'flex-start',\r\n                    maxWidth: '70%'\r\n                  }}\r\n                >\r\n                  <div style={{\r\n                    backgroundColor: msg.sender === 'You' ? '#007AFF' : '#333',\r\n                    padding: '10px 15px',\r\n                    borderRadius: '18px',\r\n                    color: 'white'\r\n                  }}>\r\n                    {msg.text}\r\n                  </div>\r\n                  <div style={{ \r\n                    fontSize: '12px', \r\n                    color: '#666',\r\n                    marginTop: '5px',\r\n                    textAlign: msg.sender === 'You' ? 'right' : 'left'\r\n                  }}>\r\n                    {msg.timestamp}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              <div ref={messagesEndRef} />\r\n            </div>\r\n\r\n            {/* Message Input */}\r\n            <div style={{\r\n              padding: '15px 20px',\r\n              backgroundColor: '#222',\r\n              borderTop: '1px solid #333',\r\n              position: 'sticky',\r\n              bottom: 0,\r\n              zIndex: 2\r\n            }}>\r\n              <form onSubmit={handleSendMessage} style={{ display: 'flex', gap: '10px' }}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newMessage}\r\n                  onChange={(e) => setNewMessage(e.target.value)}\r\n                  placeholder=\"Type a message...\"\r\n                  style={{\r\n                    flex: 1,\r\n                    padding: '12px',\r\n                    borderRadius: '20px',\r\n                    border: '1px solid #333',\r\n                    backgroundColor: '#333',\r\n                    color: 'white',\r\n                    fontSize: '16px'\r\n                  }}\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={!newMessage.trim()}\r\n                  style={{\r\n                    padding: '12px 20px',\r\n                    backgroundColor: '#007AFF',\r\n                    border: 'none',\r\n                    borderRadius: '20px',\r\n                    color: 'white',\r\n                    cursor: newMessage.trim() ? 'pointer' : 'not-allowed',\r\n                    opacity: newMessage.trim() ? 1 : 0.5\r\n                  }}\r\n                >\r\n                  Send\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          // Chat List View\r\n          <div>\r\n            <div style={{ marginBottom: '20px' }}>\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"Search...\"\r\n                style={{\r\n                  width: '100%',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                  border: '1px solid #333',\r\n                  backgroundColor: '#222',\r\n                  color: 'white'\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            {chats.map((chat) => (\r\n              <div \r\n                key={chat.id}\r\n                data-chat-id={chat.id}\r\n                onClick={() => initializeChat(chat)}\r\n                style={{\r\n                  backgroundColor: '#222',\r\n                  borderRadius: '10px',\r\n                  padding: '15px',\r\n                  marginBottom: '15px',\r\n                  cursor: 'pointer'\r\n                }}\r\n              >\r\n                <div style={{ \r\n                  display: 'flex', \r\n                  justifyContent: 'space-between', \r\n                  marginBottom: '8px',\r\n                  alignItems: 'center'\r\n                }}>\r\n                  <h3 style={{ \r\n                    margin: 0,\r\n                    color: 'white',\r\n                    fontSize: '16px'\r\n                  }}>\r\n                    {chat.sender}\r\n                  </h3>\r\n                  <span style={{ \r\n                    color: '#999',\r\n                    fontSize: '14px',\r\n                    flex: 1,\r\n                    marginLeft: '12px',\r\n                    whiteSpace: 'nowrap',\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis'\r\n                  }}>\r\n                    {chat.taskTitle}\r\n                  </span>\r\n                  {!readMessages.includes(chat.id) && chat.unreadCount > 0 && (\r\n                    <span style={{ \r\n                      backgroundColor: '#007AFF',\r\n                      borderRadius: '50%',\r\n                      padding: '2px 8px',\r\n                      color: 'white',\r\n                      fontSize: '14px',\r\n                      marginLeft: '8px'\r\n                    }}>\r\n                      {chat.unreadCount}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div style={{ \r\n                  display: 'flex', \r\n                  justifyContent: 'space-between',\r\n                  alignItems: 'center'\r\n                }}>\r\n                  <p style={{ \r\n                    margin: 0,\r\n                    color: '#999',\r\n                    fontSize: '14px',\r\n                    flex: 1,\r\n                    whiteSpace: 'nowrap',\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis',\r\n                    paddingRight: '12px'\r\n                  }}>\r\n                    {chat.message}\r\n                  </p>\r\n                  <span style={{ \r\n                    color: '#666',\r\n                    fontSize: '12px',\r\n                    whiteSpace: 'nowrap'\r\n                  }}>\r\n                    {chat.timestamp}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <BottomNavigation />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAC1D,OAASC,YAAY,KAAQ,oBAAoB,CACjD,MAAO,CAAAC,cAAc,KAAM,8BAA8B,CACzD,MAAO,CAAAC,gBAAgB,KAAM,gCAAgC,CAC7D,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAS/C,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAAAC,QAAQ,CAAGN,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAO,KAAK,CAAGV,YAAY,CAACW,KAAK,EAAIA,KAAK,CAACD,KAAK,CAAC,CAChD,KAAM,CAAAE,YAAY,CAAGZ,YAAY,CAACW,KAAK,EAAIA,KAAK,CAACC,YAAY,CAAC,CAC9D,KAAM,CAAAC,cAAc,CAAGb,YAAY,CAACW,KAAK,EAAIA,KAAK,CAACE,cAAc,CAAC,CAClE,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGlB,QAAQ,CAAyB,IAAI,CAAC,CAC9E,KAAM,CAACmB,QAAQ,CAAEC,WAAW,CAAC,CAAGpB,QAAQ,CAAgB,EAAE,CAAC,CAC3D,KAAM,CAACqB,UAAU,CAAEC,aAAa,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAAuB,cAAc,CAAGtB,MAAM,CAAiB,IAAI,CAAC,CAEnD;AACA,KAAM,CAAAuB,cAAc,CAAGA,CAAA,GAAM,KAAAC,qBAAA,CAC3B,CAAAA,qBAAA,CAAAF,cAAc,CAACG,OAAO,UAAAD,qBAAA,iBAAtBA,qBAAA,CAAwBE,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAChE,CAAC,CAED1B,SAAS,CAAC,IAAM,CACdsB,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,CAACL,QAAQ,CAAC,CAAC,CAEd;AACAjB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,KAAK,CAAGF,QAAQ,CAACE,KAA0C,CACjE,GAAIA,KAAK,SAALA,KAAK,WAALA,KAAK,CAAEe,WAAW,CAAE,CACtBC,cAAc,CAAChB,KAAK,CAACe,WAAW,CAAC,CACnC,CACF,CAAC,CAAE,CAACjB,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAkB,cAAc,CAAIC,IAAqB,EAAK,CAChDb,eAAe,CAACa,IAAI,CAAC,CACrBX,WAAW,CAAC,CACV,CACEY,EAAE,CAAE,GAAG,CACPC,IAAI,CAAEF,IAAI,CAACG,OAAO,CAClBC,MAAM,CAAEJ,IAAI,CAACI,MAAM,CACnBC,SAAS,CAAEL,IAAI,CAACK,SAClB,CAAC,CACF,CAAC,CACF,GAAI,CAACrB,YAAY,CAACsB,QAAQ,CAACN,IAAI,CAACC,EAAE,CAAC,CAAE,CACnChB,cAAc,CAACe,IAAI,CAACC,EAAE,CAAC,CACzB,CACF,CAAC,CAED,KAAM,CAAAM,iBAAiB,CAAIC,CAAkB,EAAK,CAChDA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CAACnB,UAAU,CAACoB,IAAI,CAAC,CAAC,EAAI,CAACxB,YAAY,CAAE,OAEzC,KAAM,CAAAiB,OAAoB,CAAG,CAC3BF,EAAE,CAAEU,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CACzBX,IAAI,CAAEZ,UAAU,CAChBc,MAAM,CAAE,KAAK,CACbC,SAAS,CAAE,GAAI,CAAAM,IAAI,CAAC,CAAC,CAACG,kBAAkB,CAAC,CAC3C,CAAC,CAEDzB,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAEe,OAAO,CAAC,CAAC,CACnCZ,aAAa,CAAC,EAAE,CAAC,CACnB,CAAC,CAED,mBACEZ,KAAA,QAAKoC,KAAK,CAAE,CACVC,QAAQ,CAAE,UAAU,CACpBC,MAAM,CAAE,OAAO,CACfC,QAAQ,CAAE,OAAO,CACjBC,MAAM,CAAE,QAAQ,CAChBC,eAAe,CAAE,MACnB,CAAE,CAAAC,QAAA,eACA1C,KAAA,QAAKoC,KAAK,CAAE,CACVO,OAAO,CAAE,MAAM,CACfC,aAAa,CAAE,MAAM,CAAE;AACvBN,MAAM,CAAE,MAAM,CACdO,SAAS,CAAE,MACb,CAAE,CAAAH,QAAA,eACA5C,IAAA,CAACJ,cAAc,GAAE,CAAC,CAEjBa,YAAY,cACX;AACAP,KAAA,QAAKoC,KAAK,CAAE,CACVU,IAAI,CAAE,CAAC,CACPC,OAAO,CAAE,MAAM,CACfC,aAAa,CAAE,QAAQ,CACvBP,eAAe,CAAE,MAAM,CACvBD,MAAM,CAAE,OAAO,CACfS,YAAY,CAAE,OAAO,CACrBZ,QAAQ,CAAE,UAAU,CACpBa,MAAM,CAAE,CAAC,CACTZ,MAAM,CAAE,qBACV,CAAE,CAAAI,QAAA,eAEA1C,KAAA,QAAKoC,KAAK,CAAE,CACVO,OAAO,CAAE,WAAW,CACpBF,eAAe,CAAE,MAAM,CACvBM,OAAO,CAAE,MAAM,CACfI,UAAU,CAAE,QAAQ,CACpBC,YAAY,CAAE,gBAChB,CAAE,CAAAV,QAAA,eACA5C,IAAA,WACEuD,OAAO,CAAEA,CAAA,GAAM7C,eAAe,CAAC,IAAI,CAAE,CACrC4B,KAAK,CAAE,CACLkB,UAAU,CAAE,MAAM,CAClBC,MAAM,CAAE,MAAM,CACdC,KAAK,CAAE,OAAO,CACdC,QAAQ,CAAE,MAAM,CAChBC,WAAW,CAAE,MAAM,CACnBC,MAAM,CAAE,SACV,CAAE,CAAAjB,QAAA,CACH,QAED,CAAQ,CAAC,cACT5C,IAAA,OAAIsC,KAAK,CAAE,CAAEI,MAAM,CAAE,CAAC,CAAEgB,KAAK,CAAE,OAAQ,CAAE,CAAAd,QAAA,CAAEnC,YAAY,CAACkB,MAAM,CAAK,CAAC,EACjE,CAAC,cAGNzB,KAAA,QAAKoC,KAAK,CAAE,CACVU,IAAI,CAAE,CAAC,CACPD,SAAS,CAAE,MAAM,CACjBF,OAAO,CAAE,MAAM,CACfI,OAAO,CAAE,MAAM,CACfC,aAAa,CAAE,QAAQ,CACvBY,GAAG,CAAE,MACP,CAAE,CAAAlB,QAAA,EACCjC,QAAQ,CAACoD,GAAG,CAAEC,GAAG,eAChB9D,KAAA,QAEEoC,KAAK,CAAE,CACL2B,SAAS,CAAED,GAAG,CAACrC,MAAM,GAAK,KAAK,CAAG,UAAU,CAAG,YAAY,CAC3Dc,QAAQ,CAAE,KACZ,CAAE,CAAAG,QAAA,eAEF5C,IAAA,QAAKsC,KAAK,CAAE,CACVK,eAAe,CAAEqB,GAAG,CAACrC,MAAM,GAAK,KAAK,CAAG,SAAS,CAAG,MAAM,CAC1DkB,OAAO,CAAE,WAAW,CACpBqB,YAAY,CAAE,MAAM,CACpBR,KAAK,CAAE,OACT,CAAE,CAAAd,QAAA,CACCoB,GAAG,CAACvC,IAAI,CACN,CAAC,cACNzB,IAAA,QAAKsC,KAAK,CAAE,CACVqB,QAAQ,CAAE,MAAM,CAChBD,KAAK,CAAE,MAAM,CACbS,SAAS,CAAE,KAAK,CAChBC,SAAS,CAAEJ,GAAG,CAACrC,MAAM,GAAK,KAAK,CAAG,OAAO,CAAG,MAC9C,CAAE,CAAAiB,QAAA,CACCoB,GAAG,CAACpC,SAAS,CACX,CAAC,GArBDoC,GAAG,CAACxC,EAsBN,CACN,CAAC,cACFxB,IAAA,QAAKqE,GAAG,CAAEtD,cAAe,CAAE,CAAC,EACzB,CAAC,cAGNf,IAAA,QAAKsC,KAAK,CAAE,CACVO,OAAO,CAAE,WAAW,CACpBF,eAAe,CAAE,MAAM,CACvB2B,SAAS,CAAE,gBAAgB,CAC3B/B,QAAQ,CAAE,QAAQ,CAClBgC,MAAM,CAAE,CAAC,CACTnB,MAAM,CAAE,CACV,CAAE,CAAAR,QAAA,cACA1C,KAAA,SAAMsE,QAAQ,CAAE1C,iBAAkB,CAACQ,KAAK,CAAE,CAAEW,OAAO,CAAE,MAAM,CAAEa,GAAG,CAAE,MAAO,CAAE,CAAAlB,QAAA,eACzE5C,IAAA,UACEyE,IAAI,CAAC,MAAM,CACXC,KAAK,CAAE7D,UAAW,CAClB8D,QAAQ,CAAG5C,CAAC,EAAKjB,aAAa,CAACiB,CAAC,CAAC6C,MAAM,CAACF,KAAK,CAAE,CAC/CG,WAAW,CAAC,mBAAmB,CAC/BvC,KAAK,CAAE,CACLU,IAAI,CAAE,CAAC,CACPH,OAAO,CAAE,MAAM,CACfqB,YAAY,CAAE,MAAM,CACpBT,MAAM,CAAE,gBAAgB,CACxBd,eAAe,CAAE,MAAM,CACvBe,KAAK,CAAE,OAAO,CACdC,QAAQ,CAAE,MACZ,CAAE,CACH,CAAC,cACF3D,IAAA,WACEyE,IAAI,CAAC,QAAQ,CACbK,QAAQ,CAAE,CAACjE,UAAU,CAACoB,IAAI,CAAC,CAAE,CAC7BK,KAAK,CAAE,CACLO,OAAO,CAAE,WAAW,CACpBF,eAAe,CAAE,SAAS,CAC1Bc,MAAM,CAAE,MAAM,CACdS,YAAY,CAAE,MAAM,CACpBR,KAAK,CAAE,OAAO,CACdG,MAAM,CAAEhD,UAAU,CAACoB,IAAI,CAAC,CAAC,CAAG,SAAS,CAAG,aAAa,CACrD8C,OAAO,CAAElE,UAAU,CAACoB,IAAI,CAAC,CAAC,CAAG,CAAC,CAAG,GACnC,CAAE,CAAAW,QAAA,CACH,MAED,CAAQ,CAAC,EACL,CAAC,CACJ,CAAC,EACH,CAAC,cAEN;AACA1C,KAAA,QAAA0C,QAAA,eACE5C,IAAA,QAAKsC,KAAK,CAAE,CAAEa,YAAY,CAAE,MAAO,CAAE,CAAAP,QAAA,cACnC5C,IAAA,UACEyE,IAAI,CAAC,MAAM,CACXI,WAAW,CAAC,WAAW,CACvBvC,KAAK,CAAE,CACL0C,KAAK,CAAE,MAAM,CACbnC,OAAO,CAAE,MAAM,CACfqB,YAAY,CAAE,KAAK,CACnBT,MAAM,CAAE,gBAAgB,CACxBd,eAAe,CAAE,MAAM,CACvBe,KAAK,CAAE,OACT,CAAE,CACH,CAAC,CACC,CAAC,CAELrD,KAAK,CAAC0D,GAAG,CAAExC,IAAI,eACdrB,KAAA,QAEE,eAAcqB,IAAI,CAACC,EAAG,CACtB+B,OAAO,CAAEA,CAAA,GAAMjC,cAAc,CAACC,IAAI,CAAE,CACpCe,KAAK,CAAE,CACLK,eAAe,CAAE,MAAM,CACvBuB,YAAY,CAAE,MAAM,CACpBrB,OAAO,CAAE,MAAM,CACfM,YAAY,CAAE,MAAM,CACpBU,MAAM,CAAE,SACV,CAAE,CAAAjB,QAAA,eAEF1C,KAAA,QAAKoC,KAAK,CAAE,CACVW,OAAO,CAAE,MAAM,CACfgC,cAAc,CAAE,eAAe,CAC/B9B,YAAY,CAAE,KAAK,CACnBE,UAAU,CAAE,QACd,CAAE,CAAAT,QAAA,eACA5C,IAAA,OAAIsC,KAAK,CAAE,CACTI,MAAM,CAAE,CAAC,CACTgB,KAAK,CAAE,OAAO,CACdC,QAAQ,CAAE,MACZ,CAAE,CAAAf,QAAA,CACCrB,IAAI,CAACI,MAAM,CACV,CAAC,cACL3B,IAAA,SAAMsC,KAAK,CAAE,CACXoB,KAAK,CAAE,MAAM,CACbC,QAAQ,CAAE,MAAM,CAChBX,IAAI,CAAE,CAAC,CACPkC,UAAU,CAAE,MAAM,CAClBC,UAAU,CAAE,QAAQ,CACpBC,QAAQ,CAAE,QAAQ,CAClBC,YAAY,CAAE,UAChB,CAAE,CAAAzC,QAAA,CACCrB,IAAI,CAAC+D,SAAS,CACX,CAAC,CACN,CAAC/E,YAAY,CAACsB,QAAQ,CAACN,IAAI,CAACC,EAAE,CAAC,EAAID,IAAI,CAACgE,WAAW,CAAG,CAAC,eACtDvF,IAAA,SAAMsC,KAAK,CAAE,CACXK,eAAe,CAAE,SAAS,CAC1BuB,YAAY,CAAE,KAAK,CACnBrB,OAAO,CAAE,SAAS,CAClBa,KAAK,CAAE,OAAO,CACdC,QAAQ,CAAE,MAAM,CAChBuB,UAAU,CAAE,KACd,CAAE,CAAAtC,QAAA,CACCrB,IAAI,CAACgE,WAAW,CACb,CACP,EACE,CAAC,cACNrF,KAAA,QAAKoC,KAAK,CAAE,CACVW,OAAO,CAAE,MAAM,CACfgC,cAAc,CAAE,eAAe,CAC/B5B,UAAU,CAAE,QACd,CAAE,CAAAT,QAAA,eACA5C,IAAA,MAAGsC,KAAK,CAAE,CACRI,MAAM,CAAE,CAAC,CACTgB,KAAK,CAAE,MAAM,CACbC,QAAQ,CAAE,MAAM,CAChBX,IAAI,CAAE,CAAC,CACPmC,UAAU,CAAE,QAAQ,CACpBC,QAAQ,CAAE,QAAQ,CAClBC,YAAY,CAAE,UAAU,CACxBG,YAAY,CAAE,MAChB,CAAE,CAAA5C,QAAA,CACCrB,IAAI,CAACG,OAAO,CACZ,CAAC,cACJ1B,IAAA,SAAMsC,KAAK,CAAE,CACXoB,KAAK,CAAE,MAAM,CACbC,QAAQ,CAAE,MAAM,CAChBwB,UAAU,CAAE,QACd,CAAE,CAAAvC,QAAA,CACCrB,IAAI,CAACK,SAAS,CACX,CAAC,EACJ,CAAC,GAxEDL,IAAI,CAACC,EAyEP,CACN,CAAC,EACC,CACN,EACE,CAAC,cACNxB,IAAA,CAACH,gBAAgB,GAAE,CAAC,EACjB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAM,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}