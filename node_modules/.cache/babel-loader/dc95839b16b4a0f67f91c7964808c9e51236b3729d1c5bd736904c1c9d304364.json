{"ast":null,"code":"import React from'react';import{dummyAchievements}from'../data/dummyData';import DemoDisclaimer from'../components/DemoDisclaimer';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const achievementIcons={'Promotion Master':'üåü','Curious Explorer':'üîç','Task Expert':'üëë','Task Designer':'‚úçÔ∏è','Life Planner':'üìÖ'};const Achievements=()=>{const totalAmount=dummyAchievements.reduce((sum,ach)=>sum+ach.reward*ach.progress/100,0);const totalAchievements=dummyAchievements.length;const completedAchievements=dummyAchievements.filter(ach=>ach.progress===100).length;return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',color:'white'},children:[/*#__PURE__*/_jsx(DemoDisclaimer,{}),/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'#222',padding:'20px',borderRadius:'10px',marginBottom:'20px',textAlign:'center'},children:/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'24px',color:'#FFD700'},children:[\"\\uD83D\\uDCB0 $\",totalAmount.toFixed(2)]})}),/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#222',padding:'15px',borderRadius:'10px',marginBottom:'20px',display:'flex',justifyContent:'space-around',textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'24px',marginBottom:'5px'},children:\"\\uD83C\\uDFC6\"}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'#999',fontSize:'14px'},children:[completedAchievements,\"/\",totalAchievements,\" Completed\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'24px',marginBottom:'5px'},children:\"\\u2B50\"}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'#999',fontSize:'14px'},children:[\"Level \",Math.floor(totalAmount/1000)+1]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'24px',marginBottom:'5px'},children:\"\\uD83D\\uDCC8\"}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'#999',fontSize:'14px'},children:[Math.floor(completedAchievements/totalAchievements*100),\"% Progress\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{marginBottom:'15px'},children:\"Your Achievements\"}),dummyAchievements.map((achievement,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#222',padding:'15px',marginBottom:'15px',borderRadius:'10px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',marginBottom:'10px'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{marginRight:'10px',fontSize:'20px'},children:achievementIcons[achievement.title]}),/*#__PURE__*/_jsx(\"span\",{children:achievement.title})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"span\",{style:{color:'#FFD700'},children:[\"\\uD83D\\uDCB0 $\",achievement.reward]}),/*#__PURE__*/_jsxs(\"span\",{style:{color:'#666',marginLeft:'10px'},children:[\"($\",(achievement.reward*achievement.progress/100).toFixed(2),\" earned)\"]})]})]}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'5px 0',fontSize:'14px',color:'#999'},children:achievement.description}),/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'#333',borderRadius:'10px',height:'10px',marginTop:'10px'},children:/*#__PURE__*/_jsx(\"div\",{style:{width:\"\".concat(achievement.progress,\"%\"),height:'100%',backgroundColor:'#007AFF',borderRadius:'10px'}})}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'right',fontSize:'12px',marginTop:'5px'},children:[achievement.progress,\"%\"]})]},index))]})]});};export default Achievements;","map":{"version":3,"names":["React","dummyAchievements","DemoDisclaimer","jsx","_jsx","jsxs","_jsxs","achievementIcons","Achievements","totalAmount","reduce","sum","ach","reward","progress","totalAchievements","length","completedAchievements","filter","style","padding","color","children","backgroundColor","borderRadius","marginBottom","textAlign","fontSize","toFixed","display","justifyContent","Math","floor","map","achievement","index","marginRight","title","marginLeft","margin","description","height","marginTop","width","concat"],"sources":["C:/Users/justi/OneDrive/Desktop/EN/src/pages/Achievements.tsx"],"sourcesContent":["import React from 'react';\r\nimport { dummyAchievements } from '../data/dummyData';\r\nimport DemoDisclaimer from '../components/DemoDisclaimer';\r\n\r\nconst achievementIcons = {\r\n  'Promotion Master': 'üåü',\r\n  'Curious Explorer': 'üîç',\r\n  'Task Expert': 'üëë',\r\n  'Task Designer': '‚úçÔ∏è',\r\n  'Life Planner': 'üìÖ'\r\n};\r\n\r\nconst Achievements = () => {\r\n  const totalAmount = dummyAchievements.reduce((sum, ach) => sum + (ach.reward * ach.progress / 100), 0);\r\n  const totalAchievements = dummyAchievements.length;\r\n  const completedAchievements = dummyAchievements.filter(ach => ach.progress === 100).length;\r\n\r\n  return (\r\n    <div style={{ padding: '20px', color: 'white' }}>\r\n      <DemoDisclaimer />\r\n      \r\n      <div style={{ \r\n        backgroundColor: '#222',\r\n        padding: '20px',\r\n        borderRadius: '10px',\r\n        marginBottom: '20px',\r\n        textAlign: 'center'\r\n      }}>\r\n        <div style={{ fontSize: '24px', color: '#FFD700' }}>üí∞ ${totalAmount.toFixed(2)}</div>\r\n      </div>\r\n\r\n      <div style={{\r\n        backgroundColor: '#222',\r\n        padding: '15px',\r\n        borderRadius: '10px',\r\n        marginBottom: '20px',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        textAlign: 'center'\r\n      }}>\r\n        <div>\r\n          <div style={{ fontSize: '24px', marginBottom: '5px' }}>üèÜ</div>\r\n          <div style={{ color: '#999', fontSize: '14px' }}>\r\n            {completedAchievements}/{totalAchievements} Completed\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div style={{ fontSize: '24px', marginBottom: '5px' }}>‚≠ê</div>\r\n          <div style={{ color: '#999', fontSize: '14px' }}>Level {Math.floor(totalAmount / 1000) + 1}</div>\r\n        </div>\r\n        <div>\r\n          <div style={{ fontSize: '24px', marginBottom: '5px' }}>üìà</div>\r\n          <div style={{ color: '#999', fontSize: '14px' }}>\r\n            {Math.floor((completedAchievements / totalAchievements) * 100)}% Progress\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <h3 style={{ marginBottom: '15px' }}>Your Achievements</h3>\r\n        {dummyAchievements.map((achievement, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              backgroundColor: '#222',\r\n              padding: '15px',\r\n              marginBottom: '15px',\r\n              borderRadius: '10px'\r\n            }}\r\n          >\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\r\n              <div>\r\n                <span style={{ marginRight: '10px', fontSize: '20px' }}>\r\n                  {achievementIcons[achievement.title as keyof typeof achievementIcons]}\r\n                </span>\r\n                <span>{achievement.title}</span>\r\n              </div>\r\n              <div>\r\n                <span style={{ color: '#FFD700' }}>üí∞ ${achievement.reward}</span>\r\n                <span style={{ color: '#666', marginLeft: '10px' }}>\r\n                  (${(achievement.reward * achievement.progress / 100).toFixed(2)} earned)\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <p style={{ margin: '5px 0', fontSize: '14px', color: '#999' }}>\r\n              {achievement.description}\r\n            </p>\r\n            <div style={{ \r\n              backgroundColor: '#333',\r\n              borderRadius: '10px',\r\n              height: '10px',\r\n              marginTop: '10px'\r\n            }}>\r\n              <div style={{\r\n                width: `${achievement.progress}%`,\r\n                height: '100%',\r\n                backgroundColor: '#007AFF',\r\n                borderRadius: '10px'\r\n              }} />\r\n            </div>\r\n            <div style={{ textAlign: 'right', fontSize: '12px', marginTop: '5px' }}>\r\n              {achievement.progress}%\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Achievements; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}