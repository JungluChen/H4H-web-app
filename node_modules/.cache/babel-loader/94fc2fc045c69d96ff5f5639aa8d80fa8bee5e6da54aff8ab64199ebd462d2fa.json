{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\5x\\\\Downloads\\\\EN\\\\src\\\\pages\\\\ChatRoom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { useTaskStore } from '../store/taskStore';\nimport { useLocation } from 'react-router-dom';\nimport FloatingSearchBar from '../components/FloatingSearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  const location = useLocation();\n  const chats = useTaskStore(state => state.chats);\n  const readMessages = useTaskStore(state => state.readMessages);\n  const markChatAsRead = useTaskStore(state => state.markChatAsRead);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const messagesEndRef = useRef(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const chatMessages = useTaskStore(state => state.chatMessages);\n  const addMessage = useTaskStore(state => state.addMessage);\n  const initializeChat = useCallback(chat => {\n    setSelectedChat(chat);\n    const storedMessages = chatMessages[chat.id] || [{\n      id: '1',\n      message: chat.message,\n      sender: chat.sender,\n      timestamp: chat.timestamp,\n      taskTitle: chat.taskTitle,\n      language: chat.language,\n      unreadCount: 0\n    }];\n    setMessages(storedMessages);\n    if (!readMessages.includes(chat.id)) {\n      markChatAsRead(chat.id);\n    }\n  }, [readMessages, markChatAsRead, chatMessages]);\n  useEffect(() => {\n    const state = location.state;\n    if (state !== null && state !== void 0 && state.initialChat) {\n      initializeChat(state.initialChat);\n    }\n  }, [location, initializeChat]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !selectedChat) return;\n    const message = {\n      id: Date.now().toString(),\n      message: newMessage,\n      sender: 'You',\n      timestamp: new Date().toLocaleTimeString(),\n      taskTitle: selectedChat.taskTitle,\n      language: selectedChat.language,\n      unreadCount: 0\n    };\n    setMessages([...messages, message]);\n    addMessage(selectedChat.id, message);\n    setNewMessage('');\n  };\n\n  // Filter chats based on search term\n  const filteredChats = chats.filter(chat => chat.sender.toLowerCase().includes(searchTerm.toLowerCase()) || chat.taskTitle.toLowerCase().includes(searchTerm.toLowerCase()) || chat.message.toLowerCase().includes(searchTerm.toLowerCase()));\n\n  // Reset states when leaving chat view\n  const handleBackClick = () => {\n    setSelectedChat(null);\n    setNewMessage('');\n    setMessages([]);\n  };\n  if (selectedChat) {\n    // Individual Chat View\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-view\",\n      style: {\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: '#f5f5f5',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        maxWidth: '430px',\n        margin: '0 auto',\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '15px 20px',\n          backgroundColor: '#fff',\n          borderBottom: '1px solid #eee',\n          display: 'flex',\n          alignItems: 'center',\n          gap: '15px',\n          position: 'sticky',\n          top: 0,\n          zIndex: 1001,\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackClick,\n          style: {\n            background: 'none',\n            border: 'none',\n            fontSize: '24px',\n            cursor: 'pointer',\n            padding: '5px',\n            color: '#333'\n          },\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: selectedChat.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '14px',\n              color: '#666'\n            },\n            children: selectedChat.taskTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '20px',\n          marginBottom: '80px',\n          backgroundColor: '#f5f5f5'\n        },\n        children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px',\n            display: 'flex',\n            justifyContent: msg.sender === 'You' ? 'flex-end' : 'flex-start'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              maxWidth: '70%',\n              backgroundColor: msg.sender === 'You' ? '#007AFF' : '#fff',\n              color: msg.sender === 'You' ? '#fff' : '#333',\n              padding: '10px 15px',\n              borderRadius: '18px',\n              boxShadow: '0 1px 2px rgba(0,0,0,0.1)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px',\n                opacity: 0.7,\n                marginTop: '5px'\n              },\n              children: msg.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        style: {\n          padding: '15px 20px',\n          backgroundColor: '#fff',\n          borderTop: '1px solid #eee',\n          display: 'flex',\n          gap: '10px',\n          position: 'fixed',\n          bottom: '60px',\n          left: 0,\n          right: 0,\n          zIndex: 1001,\n          maxWidth: '430px',\n          margin: '0 auto',\n          boxSizing: 'border-box'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type a message...\",\n          style: {\n            flex: 1,\n            padding: '10px',\n            borderRadius: '20px',\n            border: '1px solid #ddd',\n            fontSize: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !newMessage.trim(),\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#007AFF',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '20px',\n            fontSize: '16px',\n            cursor: 'pointer',\n            opacity: newMessage.trim() ? 1 : 0.5\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n\n  // DM List View\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dm-list\",\n    style: {\n      height: '100vh',\n      backgroundColor: '#f5f5f5',\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      maxWidth: '430px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'sticky',\n        top: 0,\n        zIndex: 1,\n        backgroundColor: '#f5f5f5',\n        padding: '15px'\n      },\n      children: /*#__PURE__*/_jsxDEV(FloatingSearchBar, {\n        searchTerm: searchTerm,\n        onSearchChange: setSearchTerm,\n        placeholder: \"\\uD83D\\uDD0D Search messages...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '0 15px'\n      },\n      children: filteredChats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => initializeChat(chat),\n        style: {\n          backgroundColor: '#fff',\n          borderRadius: '10px',\n          padding: '15px',\n          marginBottom: '10px',\n          cursor: 'pointer',\n          boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            marginBottom: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: chat.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '14px',\n              color: '#666'\n            },\n            children: chat.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '14px',\n            color: '#666'\n          },\n          children: chat.taskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '14px',\n            color: '#666',\n            marginTop: '5px',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap'\n          },\n          children: chat.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), chat.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#007AFF',\n            color: '#fff',\n            borderRadius: '50%',\n            width: '20px',\n            height: '20px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '12px',\n            position: 'absolute',\n            top: '10px',\n            right: '10px'\n          },\n          children: chat.unreadCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }, this)]\n      }, chat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"63Qi+v8SfRx/uge976YwUdCI2zA=\", false, function () {\n  return [useLocation, useTaskStore, useTaskStore, useTaskStore, useTaskStore, useTaskStore];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useTaskStore","useLocation","FloatingSearchBar","jsxDEV","_jsxDEV","ChatRoom","_s","location","chats","state","readMessages","markChatAsRead","selectedChat","setSelectedChat","messages","setMessages","newMessage","setNewMessage","messagesEndRef","searchTerm","setSearchTerm","chatMessages","addMessage","initializeChat","chat","storedMessages","id","message","sender","timestamp","taskTitle","language","unreadCount","includes","initialChat","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","Date","now","toString","toLocaleTimeString","filteredChats","filter","toLowerCase","handleBackClick","className","style","height","display","flexDirection","backgroundColor","position","top","left","right","maxWidth","margin","zIndex","children","padding","borderBottom","alignItems","gap","width","onClick","background","border","fontSize","cursor","color","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","flex","overflowY","marginBottom","map","msg","justifyContent","borderRadius","boxShadow","opacity","marginTop","ref","onSubmit","borderTop","bottom","boxSizing","type","value","onChange","target","placeholder","disabled","onSearchChange","overflow","textOverflow","whiteSpace","_c","$RefreshReg$"],"sources":["C:/Users/5x/Downloads/EN/src/pages/ChatRoom.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { useTaskStore } from '../store/taskStore';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Chat } from '../types';\r\nimport FloatingSearchBar from '../components/FloatingSearchBar';\r\n\r\nconst ChatRoom = () => {\r\n  const location = useLocation();\r\n  const chats = useTaskStore(state => state.chats);\r\n  const readMessages = useTaskStore(state => state.readMessages);\r\n  const markChatAsRead = useTaskStore(state => state.markChatAsRead);\r\n  const [selectedChat, setSelectedChat] = useState<typeof chats[0] | null>(null);\r\n  const [messages, setMessages] = useState<Chat[]>([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const chatMessages = useTaskStore(state => state.chatMessages);\r\n  const addMessage = useTaskStore(state => state.addMessage);\r\n\r\n  const initializeChat = useCallback((chat: typeof chats[0]) => {\r\n    setSelectedChat(chat);\r\n    const storedMessages = chatMessages[chat.id] || [{\r\n      id: '1',\r\n      message: chat.message,\r\n      sender: chat.sender,\r\n      timestamp: chat.timestamp,\r\n      taskTitle: chat.taskTitle,\r\n      language: chat.language,\r\n      unreadCount: 0\r\n    }];\r\n    setMessages(storedMessages);\r\n    if (!readMessages.includes(chat.id)) {\r\n      markChatAsRead(chat.id);\r\n    }\r\n  }, [readMessages, markChatAsRead, chatMessages]);\r\n\r\n  useEffect(() => {\r\n    const state = location.state as { initialChat?: typeof chats[0] };\r\n    if (state?.initialChat) {\r\n      initializeChat(state.initialChat);\r\n    }\r\n  }, [location, initializeChat]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim() || !selectedChat) return;\r\n\r\n    const message: Chat = {\r\n      id: Date.now().toString(),\r\n      message: newMessage,\r\n      sender: 'You',\r\n      timestamp: new Date().toLocaleTimeString(),\r\n      taskTitle: selectedChat.taskTitle,\r\n      language: selectedChat.language,\r\n      unreadCount: 0\r\n    };\r\n\r\n    setMessages([...messages, message]);\r\n    addMessage(selectedChat.id, message);\r\n    setNewMessage('');\r\n  };\r\n\r\n  // Filter chats based on search term\r\n  const filteredChats = chats.filter(chat => \r\n    chat.sender.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    chat.taskTitle.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    chat.message.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // Reset states when leaving chat view\r\n  const handleBackClick = () => {\r\n    setSelectedChat(null);\r\n    setNewMessage('');\r\n    setMessages([]);\r\n  };\r\n\r\n  if (selectedChat) {\r\n    // Individual Chat View\r\n    return (\r\n      <div className=\"chat-view\" style={{\r\n        height: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundColor: '#f5f5f5',\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        maxWidth: '430px',\r\n        margin: '0 auto',\r\n        zIndex: 1000\r\n      }}>\r\n        {/* Action Bar */}\r\n        <div style={{\r\n          padding: '15px 20px',\r\n          backgroundColor: '#fff',\r\n          borderBottom: '1px solid #eee',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          gap: '15px',\r\n          position: 'sticky',\r\n          top: 0,\r\n          zIndex: 1001,\r\n          width: '100%'\r\n        }}>\r\n          <button\r\n            onClick={handleBackClick}\r\n            style={{\r\n              background: 'none',\r\n              border: 'none',\r\n              fontSize: '24px',\r\n              cursor: 'pointer',\r\n              padding: '5px',\r\n              color: '#333'\r\n            }}\r\n          >\r\n            ←\r\n          </button>\r\n          <div>\r\n            <div style={{ fontWeight: 'bold' }}>{selectedChat.sender}</div>\r\n            <div style={{ fontSize: '14px', color: '#666' }}>{selectedChat.taskTitle}</div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Messages Area */}\r\n        <div style={{\r\n          flex: 1,\r\n          overflowY: 'auto',\r\n          padding: '20px',\r\n          marginBottom: '80px',\r\n          backgroundColor: '#f5f5f5'\r\n        }}>\r\n          {messages.map((msg) => (\r\n            <div\r\n              key={msg.id}\r\n              style={{\r\n                marginBottom: '15px',\r\n                display: 'flex',\r\n                justifyContent: msg.sender === 'You' ? 'flex-end' : 'flex-start'\r\n              }}\r\n            >\r\n              <div style={{\r\n                maxWidth: '70%',\r\n                backgroundColor: msg.sender === 'You' ? '#007AFF' : '#fff',\r\n                color: msg.sender === 'You' ? '#fff' : '#333',\r\n                padding: '10px 15px',\r\n                borderRadius: '18px',\r\n                boxShadow: '0 1px 2px rgba(0,0,0,0.1)'\r\n              }}>\r\n                <div>{msg.message}</div>\r\n                <div style={{\r\n                  fontSize: '12px',\r\n                  opacity: 0.7,\r\n                  marginTop: '5px'\r\n                }}>\r\n                  {msg.timestamp}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Fixed Message Input at Bottom */}\r\n        <form\r\n          onSubmit={handleSendMessage}\r\n          style={{\r\n            padding: '15px 20px',\r\n            backgroundColor: '#fff',\r\n            borderTop: '1px solid #eee',\r\n            display: 'flex',\r\n            gap: '10px',\r\n            position: 'fixed',\r\n            bottom: '60px',\r\n            left: 0,\r\n            right: 0,\r\n            zIndex: 1001,\r\n            maxWidth: '430px',\r\n            margin: '0 auto',\r\n            boxSizing: 'border-box'\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Type a message...\"\r\n            style={{\r\n              flex: 1,\r\n              padding: '10px',\r\n              borderRadius: '20px',\r\n              border: '1px solid #ddd',\r\n              fontSize: '16px'\r\n            }}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            disabled={!newMessage.trim()}\r\n            style={{\r\n              padding: '10px 20px',\r\n              backgroundColor: '#007AFF',\r\n              color: '#fff',\r\n              border: 'none',\r\n              borderRadius: '20px',\r\n              fontSize: '16px',\r\n              cursor: 'pointer',\r\n              opacity: newMessage.trim() ? 1 : 0.5\r\n            }}\r\n          >\r\n            Send\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // DM List View\r\n  return (\r\n    <div className=\"dm-list\" style={{ \r\n      height: '100vh', \r\n      backgroundColor: '#f5f5f5',\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      maxWidth: '430px',\r\n      margin: '0 auto'\r\n    }}>\r\n      {/* Search Bar */}\r\n      <div style={{\r\n        position: 'sticky',\r\n        top: 0,\r\n        zIndex: 1,\r\n        backgroundColor: '#f5f5f5',\r\n        padding: '15px'\r\n      }}>\r\n        <FloatingSearchBar\r\n          searchTerm={searchTerm}\r\n          onSearchChange={setSearchTerm}\r\n          placeholder=\"🔍 Search messages...\"\r\n        />\r\n      </div>\r\n\r\n      {/* DM List */}\r\n      <div style={{ padding: '0 15px' }}>\r\n        {filteredChats.map((chat) => (\r\n          <div\r\n            key={chat.id}\r\n            onClick={() => initializeChat(chat)}\r\n            style={{\r\n              backgroundColor: '#fff',\r\n              borderRadius: '10px',\r\n              padding: '15px',\r\n              marginBottom: '10px',\r\n              cursor: 'pointer',\r\n              boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\r\n            }}\r\n          >\r\n            <div style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              marginBottom: '5px'\r\n            }}>\r\n              <div style={{ fontWeight: 'bold' }}>{chat.sender}</div>\r\n              <div style={{ fontSize: '14px', color: '#666' }}>{chat.timestamp}</div>\r\n            </div>\r\n            <div style={{ fontSize: '14px', color: '#666' }}>{chat.taskTitle}</div>\r\n            <div style={{\r\n              fontSize: '14px',\r\n              color: '#666',\r\n              marginTop: '5px',\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap'\r\n            }}>\r\n              {chat.message}\r\n            </div>\r\n            {chat.unreadCount > 0 && (\r\n              <div style={{\r\n                backgroundColor: '#007AFF',\r\n                color: '#fff',\r\n                borderRadius: '50%',\r\n                width: '20px',\r\n                height: '20px',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                fontSize: '12px',\r\n                position: 'absolute',\r\n                top: '10px',\r\n                right: '10px'\r\n              }}>\r\n                {chat.unreadCount}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}